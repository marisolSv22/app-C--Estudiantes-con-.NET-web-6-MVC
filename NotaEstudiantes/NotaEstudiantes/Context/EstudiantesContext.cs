// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using NotaEstudiantes.Models;

namespace NotaEstudiantes.Context
{
    public partial class EstudiantesContext : DbContext
    {
        public EstudiantesContext()
        {
        }

        public EstudiantesContext(DbContextOptions<EstudiantesContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Asistencia> Asistencia { get; set; }
        public virtual DbSet<Estado> Estado { get; set; }
        public virtual DbSet<Estudiante> Estudiante { get; set; }
        public virtual DbSet<Instructor> Instructor { get; set; }
        public virtual DbSet<Jornada> Jornada { get; set; }
        public virtual DbSet<Materia> Materia { get; set; }
        public virtual DbSet<Nota> Nota { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Asistencia>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.NomAsis)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nomAsis");
            });

            modelBuilder.Entity<Estado>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Estudiante>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Apellido)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("apellido");

                entity.Property(e => e.Contraseña)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("contraseña");

                entity.Property(e => e.Correo)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("correo");

                entity.Property(e => e.Direccion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("direccion");

                entity.Property(e => e.IdAsistencia).HasColumnName("idAsistencia");

                entity.Property(e => e.IdEstado).HasColumnName("idEstado");

                entity.Property(e => e.IdJornadaI).HasColumnName("idJornadaI");

                entity.Property(e => e.ImagenUrl)
                    .HasMaxLength(500)
                    .HasColumnName("imagenURL");

                entity.Property(e => e.Jornada)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("jornada");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.Telefono)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("telefono");

                entity.HasOne(d => d.IdAsistenciaNavigation)
                    .WithMany(p => p.Estudiante)
                    .HasForeignKey(d => d.IdAsistencia)
                    .HasConstraintName("fk_idAsistencia");

                entity.HasOne(d => d.IdEstadoNavigation)
                    .WithMany(p => p.Estudiante)
                    .HasForeignKey(d => d.IdEstado)
                    .HasConstraintName("fk_idEstado");

                entity.HasOne(d => d.IdJornadaINavigation)
                    .WithMany(p => p.Estudiante)
                    .HasForeignKey(d => d.IdJornadaI)
                    .HasConstraintName("fk_idJornadaI");
            });

            modelBuilder.Entity<Instructor>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Direccion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("direccion");

                entity.Property(e => e.IdEstudianteI).HasColumnName("idEstudianteI");

                entity.Property(e => e.IdJornada).HasColumnName("idJornada");

                entity.Property(e => e.IdMateriaI).HasColumnName("idMateriaI");

                entity.Property(e => e.Matreria)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("matreria");

                entity.Property(e => e.NombreInstructor)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombreInstructor");

                entity.Property(e => e.Telefono)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("telefono");

                entity.HasOne(d => d.IdEstudianteINavigation)
                    .WithMany(p => p.Instructor)
                    .HasForeignKey(d => d.IdEstudianteI)
                    .HasConstraintName("fk_idEstudianteI");

                entity.HasOne(d => d.IdJornadaNavigation)
                    .WithMany(p => p.Instructor)
                    .HasForeignKey(d => d.IdJornada)
                    .HasConstraintName("fk_idJornada");

                entity.HasOne(d => d.IdMateriaINavigation)
                    .WithMany(p => p.Instructor)
                    .HasForeignKey(d => d.IdMateriaI)
                    .HasConstraintName("fk_idMateriaI");
            });

            modelBuilder.Entity<Jornada>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Jornada1)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("jornada");
            });

            modelBuilder.Entity<Materia>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.NombreMateria)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("nombreMateria");
            });

            modelBuilder.Entity<Nota>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Calificacion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("calificacion");

                entity.Property(e => e.IdEstudiante).HasColumnName("idEstudiante");

                entity.Property(e => e.IdMateria).HasColumnName("idMateria");

                entity.HasOne(d => d.IdEstudianteNavigation)
                    .WithMany(p => p.Nota)
                    .HasForeignKey(d => d.IdEstudiante)
                    .HasConstraintName("idEstudiante");

                entity.HasOne(d => d.IdMateriaNavigation)
                    .WithMany(p => p.Nota)
                    .HasForeignKey(d => d.IdMateria)
                    .HasConstraintName("fk_idMateria");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}